x-airflow-env: &airflow-env
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
  AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: utc
  AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
  AIRFLOW__METRICS__STATSD_ON : 'True'
  AIRFLOW__METRICS__STATSD_HOST : statsd-exporter
  AIRFLOW__METRICS__STATSD_PORT : 9125
  AIRFLOW__METRICS__STATSD_PREFIX : airflow
  

services:
  airflow:
    build:
      context: .
    image: custom-airflow:latest
    container_name: airflow-main
    restart: always
    environment: *airflow-env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - databases:/opt/airflow/databases
      - ./mediawiki_history_dumps:/opt/airflow/mediawiki_history_dumps

    ports:
      - "8080:8080"
      - "8000:8000"
    command: webserver
    depends_on:
      - airflow_init

  scheduler:
    image: custom-airflow:latest
    restart: always
    environment: *airflow-env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - databases:/opt/airflow/databases
      - ./mediawiki_history_dumps:/opt/airflow/mediawiki_history_dumps

    command: scheduler
    depends_on:
      - airflow_init

  airflow_init:
    image: custom-airflow:latest
    restart: on-failure
    environment: *airflow-env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - databases:/opt/airflow/databases
      - ./mediawiki_history_dumps:/opt/airflow/mediawiki_history_dumps
    entrypoint: >
      /bin/bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Andrea --lastname Denina --role Admin --email andredeninaf@gmail.com
      "
    depends_on:
      - postgres

  postgres:
      image: postgres:15
      container_name: postgres
      restart: always
      environment:
        POSTGRES_USER: airflow
        POSTGRES_PASSWORD: airflow
        POSTGRES_DB: airflow
      volumes:
        - postgres-db-volume:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U airflow"]
        interval: 10s
        retries: 5

  prometheus:
      image: prom/prometheus
      container_name: prometheus
      volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"

  grafana:
      image: grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      volumes:
        - grafana-storage:/var/lib/grafana
        - ./monitoring/grafana:/etc/grafana/provisioning/dashboards
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
        - GF_INSTALL_PLUGINS=grafana-piechart-panel

  statsd-exporter:
    image: prom/statsd-exporter
    volumes:
      - ./monitoring/statsd.yaml:/etc/statsd.yaml
    entrypoint: ["/bin/sh", "-c", "--"]
    command: ["statsd_exporter --log.level debug --statsd.mapping-config=//etc/statsd.yaml"]
    ports:
      - 9102:9102   # scrape port
      - 9125:9125   # ingest port
    restart: always

  dash-app:
    build:
      context: ./dashboards
      dockerfile: Dockerfile
    volumes:
      - databases:/databases
    ports:
      - "8050:8050"

volumes:
  postgres-db-volume:
  grafana-storage:
  databases: